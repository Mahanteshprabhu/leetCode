class Solution {
    public boolean strongPasswordCheckerII(String password) {
        
        // Check if the password length is less than 8 characters
        if(password.length() < 8){
            return false;  // Return false if password is too short
        }

        // Flags to track presence of required character types
        boolean hLower = false;  // Checks if there's at least one lowercase letter
        boolean hUpper = false;  // Checks if there's at least one uppercase letter
        boolean hDigit = false;  // Checks if there's at least one digit
        boolean hSpecial = false;  // Checks if there's at least one special character

        // String containing all acceptable special characters
        String specialChar = "!@#$%^&*()-+";

        // Loop through each character in the password
        for(int i = 0; i < password.length(); i++){
            char ch = password.charAt(i);  // Get the current character

            // Check if the current character is the same as the previous one
            if(i > 0 && password.charAt(i) == password.charAt(i-1)){
                return false;  // Return false if two consecutive characters are the same
            }

            // Check if the character is a lowercase letter
            if(Character.isLowerCase(ch))
                hLower = true;

            // Check if the character is an uppercase letter
            if(Character.isUpperCase(ch))
                hUpper = true;

            // Check if the character is a digit
            if(Character.isDigit(ch))
                hDigit = true;

            // Check if the character is one of the special characters
            if(specialChar.contains(String.valueOf(ch)))
                hSpecial = true;
        }

        // Return true only if all required conditions are met:
        // - At least one lowercase letter
        // - At least one uppercase letter
        // - At least one digit
        // - At least one special character
        return hLower && hUpper && hDigit && hSpecial;
    }
}

